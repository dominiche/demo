#
# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#

version: '2'
services:
  peer-base:
    image: hyperledger/fabric-peer${IMAGE_TAG_FABRIC}
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=ordererskafka_default
      #- CORE_LOGGING_LEVEL=ERROR
      - CORE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_ENDORSER_ENABLED=true
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_CHANNELSERVICE_ENABLED=true
      # The following setting skips the gossip handshake since we are
      # are not doing mutual TLS
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/msp
      - CORE_PEER_GOSSIP_SKIPHANDSHAKE=true
      - CORE_PEER_PROFILE_ENABLED=false
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/msp/peer/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/msp/peer/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/msp/peer/tls/ca.crt
      - CORE_PEER_TLS_ENABLED=${ORG_HYPERLEDGER_FABRIC_SDKTEST_INTEGRATIONTESTS_TLS}
      # NOTE BOTH below should never be used in production.
      - CORE_PEER_AUTHENTICATION_TIMEWINDOW=3600s
      - CORE_PEER_EVENTS_TIMEWINDOW=3600s
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start

  zookeeper:
      image: hyperledger/fabric-zookeeper
#      restart: always
      environment:
        - quorumListenOnAllIPs=true
      ports:
        - '2181'
        - '2888'
        - '3888'

  kafka:
    image: hyperledger/fabric-kafka
#    restart: always
    environment:
      # message.max.bytes
      # The maximum size of envelope that the broker can receive.
      - KAFKA_MESSAGE_MAX_BYTES=103809024 # 99 * 1024 * 1024 B
      - KAFKA_REPLICA_FETCH_MAX_BYTES=103809024 # 99 * 1024 * 1024 B
      - KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE=false
      - KAFKA_LOG_RETENTION_MS=-1
#    ports:
#      - '9092'

  orderer.example.com:
      image: hyperledger/fabric-orderer${IMAGE_TAG_FABRIC}
      environment:
#        - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=example_default
        - ORDERER_GENERAL_LOGLEVEL=debug
        - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
#        - ORDERER_GENERAL_LISTENPORT=7050
        - ORDERER_GENERAL_GENESISMETHOD=file
        - ORDERER_GENERAL_GENESISFILE=/etc/hyperledger/configtx/orderer.block
        - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
        - ORDERER_GENERAL_LOCALMSPDIR=/etc/hyperledger/msp/orderer/msp
        - ORDERER_GENERAL_TLS_ENABLED=${ORG_HYPERLEDGER_FABRIC_SDKTEST_INTEGRATIONTESTS_TLS}
        - ORDERER_GENERAL_TLS_PRIVATEKEY=/etc/hyperledger/msp/orderer/tls/server.key
        - ORDERER_GENERAL_TLS_CERTIFICATE=/etc/hyperledger/msp/orderer/tls/server.crt
        - ORDERER_GENERAL_TLS_ROOTCAS=[/etc/hyperledger/msp/orderer/tls/ca.crt]
        - GRPC_TRACE=all=true,
        - GRPC_VERBOSITY=debug
        - ORDERER_GENERAL_AUTHENTICATION_TIMEWINDOW=3600s #Not for production -- remove.
      working_dir: /opt/gopath/src/github.com/hyperledger/fabric
      command: orderer
      volumes:
       - ./e2e-2Orgs/${FAB_CONFIG_GEN_VERS}/orderer.block:/etc/hyperledger/configtx/orderer.block:ro
#      networks:
#        default:
#          aliases:
#            - example
      ports:
        - "7050"